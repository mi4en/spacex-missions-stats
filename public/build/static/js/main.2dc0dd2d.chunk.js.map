{"version":3,"sources":["logo.png","components/LaunchItem.jsx","components/MissionKey.jsx","components/Launches.jsx","components/LaunchDetails.jsx","components/Footer.jsx","App.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","launches","slice","map","LAUNCH_QUERY","LaunchDetails","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","Footer","href","Date","getFullYear","App","src","logo","alt","style","width","display","margin","exact","path","component","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"0OAAe,G,MAAA,IAA0B,kC,gDCoC1BA,EA/BI,SAAC,GAEb,IAAD,IADLC,OAAUC,EACL,EADKA,cAAeC,EACpB,EADoBA,aAAcC,EAClC,EADkCA,kBAAmBC,EACrD,EADqDA,eAE1D,OACC,qBAAKC,UAAU,sBAAf,SACC,sBAAKA,UAAU,MAAf,UACC,sBAAKA,UAAU,WAAf,UACC,0CACU,IACT,sBAAMA,UAAWD,EAAiB,eAAiB,cAAnD,SACEF,OAGH,uCACO,cAAC,IAAD,CAAQI,OAAO,mBAAf,SAAmCH,UAG3C,qBAAKE,UAAU,WAAf,SACC,cAAC,IAAD,CAAME,GAAE,kBAAaN,GAAiBI,UAAU,oBAAhD,oCCVUG,EAXI,WAClB,OACC,qBAAKH,UAAU,OAAf,SACC,8BACC,sBAAMA,UAAU,yBADjB,aAEC,sBAAMA,UAAU,wBAFjB,gBCCGI,EAAiBC,YAAH,yKAiCLC,EAtBE,WAAO,IAAD,EACWC,YAASH,GAAlCI,EADc,EACdA,QAASC,EADK,EACLA,MAAOC,EADF,EACEA,KAExB,GAAIF,EAAS,OAAO,2CACpB,GAAIC,EAAO,OAAO,wCAAWA,KAG7B,IAAME,EAAWD,EAAKC,SAASC,MAAM,EAAG,KAExC,OACC,eAAC,WAAD,WACC,oBAAIZ,UAAU,iBAAd,sBACA,cAAC,EAAD,IACA,cAAC,WAAD,UACEW,EAASE,KAAI,SAAAlB,GAAM,OACnB,cAAC,EAAD,CAAuCA,OAAQA,GAA9BA,EAAOC,wBC5BvBkB,EAAeT,YAAH,mUAwEHU,EAvDO,SAAAC,GAAU,IACzBpB,EAAkBoB,EAAMC,MAAMC,OAA9BtB,cACNA,EAAgBuB,SAASvB,GAFK,MAIGW,YAASO,EAAc,CACvDM,UAAW,CAAExB,mBADNY,EAJsB,EAItBA,QAASC,EAJa,EAIbA,MAAOC,EAJM,EAINA,KAIxB,GAAIF,EAAS,OAAO,2CACpB,GAAIC,EAAO,OAAO,wCAAWA,KATC,MAgB1BC,EAAKf,OAJRE,EAZ6B,EAY7BA,aACAwB,EAb6B,EAa7BA,YACAtB,EAd6B,EAc7BA,eAd6B,IAe7BuB,OAAUC,EAfmB,EAenBA,UAAWC,EAfQ,EAeRA,YAAaC,EAfL,EAeKA,YAGnC,OACC,eAAC,WAAD,WACC,qBAAIzB,UAAU,iBAAd,UACC,sBAAMA,UAAU,YAAhB,sBAA4C,IAC5C,sBAAMA,UAAWD,EAAiB,eAAiB,cAAnD,SACEF,OAIH,oBAAIG,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACC,qBAAIA,UAAU,kBAAd,4BAAgDJ,KAChD,qBAAII,UAAU,kBAAd,0BAA8CqB,KAC9C,qBAAIrB,UAAU,kBAAd,2BACgB,IACf,sBAAMA,UAAWD,EAAiB,eAAiB,cAAnD,SACEA,EAAiB,UAAY,iBAKjC,oBAAIC,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACC,qBAAIA,UAAU,kBAAd,wBAA4CuB,KAC5C,qBAAIvB,UAAU,kBAAd,0BAA8CwB,KAC9C,qBAAIxB,UAAU,kBAAd,0BAA8CyB,QAG/C,uBAEA,cAAC,IAAD,CAAMvB,GAAG,IAAIF,UAAU,oBAAvB,sBCjCY0B,EAlCA,WACd,OACC,wBAAQ1B,UAAU,gCAAlB,SACC,qBAAKA,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,sBAAKA,UAAU,WAAf,UACC,mBAAG2B,KAAK,4BAAR,2BACA,0CAAc,IAAIC,MAAOC,cAAzB,uBAEA,mBAAGF,KAAK,sBAAsB3B,UAAU,OAAxC,mBAGA,mBAAG2B,KAAK,wBAAwB3B,UAAU,OAA1C,0BAGA,mBAAG2B,KAAK,sBAAsB3B,UAAU,OAAxC,qBAGA,mBAAG2B,KAAK,4BAA4B3B,UAAU,OAA9C,wBAKD,qBAAKA,UAAU,2BAAf,SACC,mBAAG2B,KAAK,+BAA+B3B,UAAU,QAAjD,sDCDS8B,MAjBf,WACC,OACC,eAAC,IAAD,WACC,sBAAK9B,UAAU,YAAf,UACC,qBACC+B,IAAKC,EACLC,IAAI,SACJC,MAAO,CAAEC,MAAO,IAAKC,QAAS,QAASC,OAAQ,UAEhD,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlC,IACjC,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,yBAAyBC,UAAWzB,OAEvD,cAAC,EAAD,QCXG0B,EAAS,IAAIC,IAAa,CAC/BC,IAAK,WAELC,MAAO,IAAIC,MAeZC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAACC,EAAA,EAAD,CAAgBR,OAAQA,EAAxB,SACC,cAAC,EAAD,QAGFS,SAASC,eAAe,W","file":"static/js/main.2dc0dd2d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LaunchItem = ({\r\n\tlaunch: { flight_number, mission_name, launch_date_local, launch_success },\r\n}) => {\r\n\treturn (\r\n\t\t<div className='card card-body mb-3'>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-md-9'>\r\n\t\t\t\t\t<h4>\r\n\t\t\t\t\t\tMission:{' '}\r\n\t\t\t\t\t\t<span className={launch_success ? 'text-success' : 'text-danger'}>\r\n\t\t\t\t\t\t\t{mission_name}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tDate: <Moment format='YYYY-MM-DD HH:mm'>{launch_date_local}</Moment>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<Link to={`/launch/${flight_number}`} className='btn btn-secondary'>\r\n\t\t\t\t\t\tLaunch Details\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLaunchItem.propTypes = {\r\n\tlaunch: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default LaunchItem\r\n","import React from 'react'\r\n\r\nconst MissionKey = () => {\r\n\treturn (\r\n\t\t<div className='my-3'>\r\n\t\t\t<p>\r\n\t\t\t\t<span className='px-3 mr-1 bg-success' /> = Success\r\n\t\t\t\t<span className='px-3 ml-4 bg-danger' /> = Fail\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MissionKey\r\n","import React, { Fragment } from 'react'\r\nimport { gql, useQuery } from '@apollo/client'\r\n\r\nimport LaunchItem from './LaunchItem'\r\nimport MissionKey from './MissionKey'\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n\tquery LaunchesQuery {\r\n\t\tlaunches {\r\n\t\t\tflight_number\r\n\t\t\tmission_name\r\n\t\t\tlaunch_date_local\r\n\t\t\tlaunch_success\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst Launches = () => {\r\n\tconst { loading, error, data } = useQuery(LAUNCHES_QUERY)\r\n\r\n\tif (loading) return <p>Loading...</p>\r\n\tif (error) return <p>Error: {error}</p>\r\n\r\n\t// In the SpaceX API there are two launches with the same flight number - elements 110 and 111, that is why here we remove the last element of the arr, so we dont get React errors for same key in the map func\r\n\tconst launches = data.launches.slice(0, 110)\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className='display-4 my-3'>Launches</h1>\r\n\t\t\t<MissionKey />\r\n\t\t\t<Fragment>\r\n\t\t\t\t{launches.map(launch => (\r\n\t\t\t\t\t<LaunchItem key={launch.flight_number} launch={launch} />\r\n\t\t\t\t))}\r\n\t\t\t</Fragment>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default Launches\r\n","import React, { Fragment } from 'react'\r\nimport { gql, useQuery } from '@apollo/client'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LAUNCH_QUERY = gql`\r\n\tquery LaunchQuery($flight_number: Int!) {\r\n\t\tlaunch(flight_number: $flight_number) {\r\n\t\t\tflight_number\r\n\t\t\tmission_name\r\n\t\t\tlaunch_year\r\n\t\t\tlaunch_success\r\n\t\t\tlaunch_date_local\r\n\t\t\trocket {\r\n\t\t\t\trocket_id\r\n\t\t\t\trocket_name\r\n\t\t\t\trocket_type\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst LaunchDetails = props => {\r\n\tlet { flight_number } = props.match.params\r\n\tflight_number = parseInt(flight_number)\r\n\r\n\tconst { loading, error, data } = useQuery(LAUNCH_QUERY, {\r\n\t\tvariables: { flight_number },\r\n\t})\r\n\r\n\tif (loading) return <p>Loading...</p>\r\n\tif (error) return <p>Error: {error}</p>\r\n\r\n\tconst {\r\n\t\tmission_name,\r\n\t\tlaunch_year,\r\n\t\tlaunch_success,\r\n\t\trocket: { rocket_id, rocket_name, rocket_type },\r\n\t} = data.launch\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className='display-4 my-3'>\r\n\t\t\t\t<span className='text-dark'>Mission:</span>{' '}\r\n\t\t\t\t<span className={launch_success ? 'text-success' : 'text-danger'}>\r\n\t\t\t\t\t{mission_name}\r\n\t\t\t\t</span>\r\n\t\t\t</h1>\r\n\r\n\t\t\t<h4 className='mb-3'>Launch Details</h4>\r\n\t\t\t<ul className='list-group'>\r\n\t\t\t\t<li className='list-group-item'>Flight Numner: {flight_number}</li>\r\n\t\t\t\t<li className='list-group-item'>Launch Year: {launch_year}</li>\r\n\t\t\t\t<li className='list-group-item'>\r\n\t\t\t\t\tLaunch Status:{' '}\r\n\t\t\t\t\t<span className={launch_success ? 'text-success' : 'text-danger'}>\r\n\t\t\t\t\t\t{launch_success ? 'Success' : 'Failed'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<h4 className='my-3'>Rocket Details</h4>\r\n\t\t\t<ul className='list-group'>\r\n\t\t\t\t<li className='list-group-item'>Rocket ID: {rocket_id}</li>\r\n\t\t\t\t<li className='list-group-item'>Rocket Name: {rocket_name}</li>\r\n\t\t\t\t<li className='list-group-item'>Rocket Type: {rocket_type}</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<hr />\r\n\r\n\t\t\t<Link to='/' className='btn btn-secondary'>\r\n\t\t\t\tBack\r\n\t\t\t</Link>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default LaunchDetails\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className='footer sticky-bottom mt-3 p-5'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-8'>\r\n\t\t\t\t\t\t<a href='https://mario-nikolov.com'>Mario Nikolov</a>\r\n\t\t\t\t\t\t<span>&copy; {new Date().getFullYear()}. App built with </span>\r\n\r\n\t\t\t\t\t\t<a href='https://reactjs.org' className='mr-2'>\r\n\t\t\t\t\t\t\tReact\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href='https://expressjs.com' className='mr-2'>\r\n\t\t\t\t\t\t\tNode-Express\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href='https://graphql.org' className='mr-2'>\r\n\t\t\t\t\t\t\tGraphQL\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href='https://apollographql.com' className='mr-2'>\r\n\t\t\t\t\t\t\tGraphQL\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='col-md-4 mt-sm-2 mt-md-0'>\r\n\t\t\t\t\t\t<a href='https://docs.spacexdata.com/' className='mr-2 '>\r\n\t\t\t\t\t\t\tData powered by the SpaceX API\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer\r\n","import { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport './App.css'\nimport logo from './logo.png'\nimport Launches from './components/Launches'\nimport LaunchDetails from './components/LaunchDetails'\nimport Footer from './components/Footer'\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div className='container'>\n\t\t\t\t<img\n\t\t\t\t\tsrc={logo}\n\t\t\t\t\talt='SpaceX'\n\t\t\t\t\tstyle={{ width: 300, display: 'block', margin: 'auto' }}\n\t\t\t\t/>\n\t\t\t\t<Route exact path='/' component={Launches} />\n\t\t\t\t<Route exact path='/launch/:flight_number' component={LaunchDetails} />\n\t\t\t</div>\n\t\t\t<Footer />\n\t\t</Router>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloClient, InMemoryCache } from '@apollo/client'\nimport { ApolloProvider } from '@apollo/client/react'\n// import { gql } from '@apollo/client'\n\nimport './index.css'\nimport App from './App'\n\nconst client = new ApolloClient({\n\turi: '/graphql',\n\t// uri: 'https://48p1r2roz4.sse.codesandbox.io',\n\tcache: new InMemoryCache(),\n})\n\n// client\n// \t.query({\n// \t\tquery: gql`\n// \t\t\tquery GetRates {\n// \t\t\t\trates(currency: \"USD\") {\n// \t\t\t\t\tcurrency\n// \t\t\t\t}\n// \t\t\t}\n// \t\t`,\n// \t})\n// \t.then(result => console.log('RESULT: ', result))\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ApolloProvider client={client}>\n\t\t\t<App />\n\t\t</ApolloProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n"],"sourceRoot":""}